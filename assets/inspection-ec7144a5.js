import{J as g,K as F,L,M as P,r as A,l as T,E as M}from"./index-2a5e17aa.js";const D=["化学品储存区A","化学品储存区B","化学品储存区C","生产车间A","生产车间B","生产车间C","生产车间D","仓储区A","仓储区B","仓储区C","原料仓库","成品仓库","包装车间","实验室A","实验室B","质检区","设备维修间","动力中心","污水处理站","办公区"],I=["张明","李伟","王强","刘洋","陈勇","赵静","孙磊","周涛","吴婷","郑阳","杨帆","黄晓明","马超","徐亮","朱峰"],y={化学品储存区:["危险品存储检查","泄漏检测","通风系统检查","安全警示检查","应急设施检查","防护设施检查"],生产车间:["设备运行检查","安全生产检查","噪音检测","机械设备检查","工具检查","设备润滑检查"],仓储区:["货物堆放检查","消防通道检查","照明系统检查","货物包装检查","库存安全检查","应急通道检查"],实验室:["实验设备检查","通风柜检查","试剂存储检查","安全设施检查","废液处理检查","仪器校准检查"],其他区域:["日常安全检查","设备维护检查","环境检查","卫生检查","基础设施检查","安全隐患排查"]},X=e=>e.includes("化学品")?y.化学品储存区:e.includes("生产")?y.生产车间:e.includes("仓储")||e.includes("仓库")?y.仓储区:e.includes("实验室")?y.实验室:y.其他区域,G=e=>{const n=e.replace(/[-]/g,""),o=Math.floor(Math.random()*9999).toString().padStart(4,"0");return`JX${n}${o}`},K=(e,n)=>{if(e==="待执行")return"";if(e==="进行中")return`正在进行${n}`;if(e==="已完成"){const o=["检查完成，运行正常","已完成检查，记录已存档","检查无异常","已按要求完成检查","设备状态良好","符合安全标准"];return o[Math.floor(Math.random()*o.length)]}return""},q=(e,n)=>{const o=8+n,u=D[Math.floor(Math.random()*D.length)],f=X(u),h=f[Math.floor(Math.random()*f.length)],l=g(e),c=g(),S=l.isSame(c,"day"),p=l.isAfter(c),m=l.isAfter(c.subtract(7,"day"));let r,a;if(p)Math.random()<.7?(r="待执行",a=0):(r="进行中",a=Math.floor(Math.random()*40)+10);else if(S){const i=["待执行","待执行","待执行","待执行","进行中","进行中","进行中","进行中","进行中","已完成"];r=i[Math.floor(Math.random()*i.length)],a=r==="进行中"?Math.floor(Math.random()*60)+20:r==="已完成"?100:0}else if(m){const i=Math.random();i<.35?(r="待执行",a=0):i<.85?(r="进行中",a=Math.floor(Math.random()*40)+30):i<.95?(r="已完成",a=100):(r="已超时",a=Math.floor(Math.random()*30)+60)}else{const i=Math.random();i<.25?(r="待执行",a=0):i<.65?(r="进行中",a=Math.floor(Math.random()*30)+40):i<.95?(r="已完成",a=100):(r="已超时",a=Math.floor(Math.random()*20)+80)}return r==="进行中"&&(a=Math.floor(Math.random()*70)+15),{taskNo:G(e),area:u,inspector:I[Math.floor(Math.random()*I.length)],startTime:g(`${e} ${String(o).padStart(2,"0")}:00:00`).format("YYYY-MM-DD HH:mm:ss"),endTime:g(`${e} ${String(o+9).padStart(2,"0")}:00:00`).format("YYYY-MM-DD HH:mm:ss"),status:r,progress:a,content:h,remark:K(r,h)}},Y=(e=100)=>{const n=[],o=g(),u=o.subtract(3,"month");let f=o;for(;n.length<e&&f.isAfter(u);){const h=Math.floor(Math.random()*3)+2;for(let l=0;l<h&&n.length<e;l++)n.push(q(f.format("YYYY-MM-DD"),l));f=f.subtract(1,"day")}return n.sort((h,l)=>l.startTime.localeCompare(h.startTime))};var _={exports:{}};(function(e,n){(function(o,u){e.exports=u()})(F,function(){return function(o,u,f){u.prototype.isBetween=function(h,l,c,S){var p=f(h),m=f(l),r=(S=S||"()")[0]==="(",a=S[1]===")";return(r?this.isAfter(p,c):!this.isBefore(p,c))&&(a?this.isBefore(m,c):!this.isAfter(m,c))||(r?this.isBefore(p,c):!this.isAfter(p,c))&&(a?this.isAfter(m,c):!this.isBefore(m,c))}}})})(_);var z=_.exports;const Q=L(z);g.extend(Q);Y(100);const V=P("inspection",()=>{const e=A([]),n=A({}),o=A({}),u=A(!1),f=T(()=>e.value.filter(t=>t.status==="待执行").length),h=T(()=>e.value.filter(t=>t.status==="进行中").length),l=T(()=>e.value.filter(t=>t.status==="已完成").length),c=T(()=>e.value.filter(t=>t.status==="已超时").length),S=T(()=>e.value.filter(t=>g(t.startTime).isSame(g(),"month")).length),p=T(()=>{const t={};return e.value.forEach(s=>{t[s.area]=(t[s.area]||0)+1}),t}),m=(t=!1)=>{u.value=!0;try{const s=localStorage.getItem("inspection_tasks");!s||t?(e.value=Y(100),localStorage.setItem("inspection_tasks",JSON.stringify(e.value))):e.value=JSON.parse(s)}catch(s){console.error("加载任务失败:",s),e.value=Y(100)}finally{u.value=!1}},r=()=>{m(!0),M.success("数据已刷新")},a=(t,s)=>e.value.filter(d=>g(d.startTime).isBetween(t,s,"day","[]")),i=t=>e.value.filter(s=>s.area===t),B=()=>{try{localStorage.setItem("inspection_tasks",JSON.stringify(e.value))}catch(t){console.error("保存任务失败:",t),M.error("保存任务失败")}},J=t=>{const s={...t,taskNo:`JX${g().format("YYYYMMDD")}${Math.floor(Math.random()*9999).toString().padStart(4,"0")}`};return e.value.unshift(s),B(),M.success("创建任务成功"),s},x=(t,s)=>{const d=e.value.findIndex(v=>v.taskNo===t);d!==-1&&(e.value[d]={...e.value[d],...s},B(),M.success("更新任务成功"))},R=t=>{const s=e.value.findIndex(d=>d.taskNo===t);s!==-1&&(e.value.splice(s,1),B(),M.success("删除任务成功"))},$=t=>{const s=e.value.find(d=>d.taskNo===t);return s?{...s,inspector:s.inspector}:null},C=t=>{try{const s=localStorage.getItem(`inspection_records_${t}`);s&&(n.value[t]=JSON.parse(s))}catch(s){console.error("加载记录失败:",s),M.error("加载记录失败")}},E=t=>{try{localStorage.setItem(`inspection_records_${t}`,JSON.stringify(n.value[t]||[]))}catch(s){console.error("保存记录失败:",s),M.error("保存记录失败")}},O=(t,s)=>{if(n.value[t]||(n.value[t]=[]),n.value[t].push(s),E(t),$(t)){const v=n.value[t].length*20,k=Math.min(Math.round(v),100);x(t,{progress:k})}},w=t=>{try{const s=localStorage.getItem(`inspection_abnormals_${t}`);s&&(o.value[t]=JSON.parse(s))}catch(s){console.error("加载异常记录失败:",s),M.error("加载异常记录失败")}},b=t=>{try{localStorage.setItem(`inspection_abnormals_${t}`,JSON.stringify(o.value[t]||[]))}catch(s){console.error("保存异常记录失败:",s),M.error("保存异常记录失败")}},H=(t,s)=>{o.value[t]||(o.value[t]=[]),o.value[t].push(s),b(t)},j=(t,s,d)=>{const v=o.value[t];if(v){const k=v.findIndex(N=>N.id===s);k!==-1&&(v[k]={...v[k],...d},b(t))}};return m(),{tasks:e,records:n,abnormals:o,loading:u,pendingTasks:f,processingTasks:h,completedTasks:l,timeoutTasks:c,currentMonthTasks:S,tasksByArea:p,loadTasks:m,refreshTasks:r,addTask:J,updateTask:x,deleteTask:R,getTaskById:$,getTasksByDateRange:a,getTasksByArea:i,loadRecords:C,addRecord:O,loadAbnormals:w,addAbnormal:H,updateAbnormal:j}});export{V as u};
