import{J as M,K as L,L as P,M as X,r as A,l as T,E as m}from"./index-e8a5749c.js";const _=["化学品储存区A","化学品储存区B","化学品储存区C","生产车间A","生产车间B","生产车间C","生产车间D","仓储区A","仓储区B","仓储区C","原料仓库","成品仓库","包装车间","实验室A","实验室B","质检区","设备维修间","动力中心","污水处理站","办公区"],D=["张明","李伟","王强","刘洋","陈勇","赵静","孙磊","周涛","吴婷","郑阳","杨帆","黄晓明","马超","徐亮","朱峰"],k={化学品储存区:["危险品存储检查","泄漏检测","通风系统检查","安全警示检查","应急设施检查","防护设施检查"],生产车间:["设备运行检查","安全生产检查","噪音检测","机械设备检查","工具检查","设备润滑检查"],仓储区:["货物堆放检查","消防通道检查","照明系统检查","货物包装检查","库存安全检查","应急通道检查"],实验室:["实验设备检查","通风柜检查","试剂存储检查","安全设施检查","废液处理检查","仪器校准检查"],其他区域:["日常安全检查","设备维护检查","环境检查","卫生检查","基础设施检查","安全隐患排查"]},G=e=>e.includes("化学品")?k.化学品储存区:e.includes("生产")?k.生产车间:e.includes("仓储")||e.includes("仓库")?k.仓储区:e.includes("实验室")?k.实验室:k.其他区域,H=e=>{const o=e.replace(/[-]/g,""),a=Math.floor(Math.random()*9999).toString().padStart(4,"0");return`JX${o}${a}`},K=(e,o)=>{if(e==="待执行")return"";if(e==="进行中")return`正在进行${o}`;if(e==="已完成"){const a=["检查完成，运行正常","已完成检查，记录已存档","检查无异常","已按要求完成检查","设备状态良好","符合安全标准"];return a[Math.floor(Math.random()*a.length)]}return""},q=(e,o)=>{const a=8+o,c=_[Math.floor(Math.random()*_.length)],d=G(c),u=d[Math.floor(Math.random()*d.length)],v=M(e),l=M(),S=v.isSame(l,"day"),g=v.isAfter(l),h=v.isAfter(l.subtract(7,"day"));let s,n;if(g)Math.random()<.7?(s="待执行",n=0):(s="进行中",n=Math.floor(Math.random()*40)+10);else if(S){const i=["待执行","待执行","待执行","待执行","进行中","进行中","进行中","进行中","进行中","已完成"];s=i[Math.floor(Math.random()*i.length)],n=s==="进行中"?Math.floor(Math.random()*60)+20:s==="已完成"?100:0}else if(h){const i=Math.random();i<.35?(s="待执行",n=0):i<.85?(s="进行中",n=Math.floor(Math.random()*40)+30):i<.95?(s="已完成",n=100):(s="已超时",n=Math.floor(Math.random()*30)+60)}else{const i=Math.random();i<.25?(s="待执行",n=0):i<.65?(s="进行中",n=Math.floor(Math.random()*30)+40):i<.95?(s="已完成",n=100):(s="已超时",n=Math.floor(Math.random()*20)+80)}return s==="进行中"&&(n=Math.floor(Math.random()*70)+15),{taskNo:H(e),area:c,inspector:D[Math.floor(Math.random()*D.length)],startTime:`${e} ${String(a).padStart(2,"0")}:00:00`,endTime:`${e} ${String(a+9).padStart(2,"0")}:00:00`,status:s,progress:n,content:u,remark:K(s,u)}},x=(e=100)=>{const o=[];let c=M().subtract(90,"day");for(;o.length<e;){const d=Math.floor(Math.random()*3)+2;for(let u=0;u<d&&o.length<e;u++)o.push(q(c.format("YYYY-MM-DD"),u));c=c.add(1,"day")}return o.sort((d,u)=>u.startTime.localeCompare(d.startTime))};var J={exports:{}};(function(e,o){(function(a,c){e.exports=c()})(L,function(){return function(a,c,d){c.prototype.isBetween=function(u,v,l,S){var g=d(u),h=d(v),s=(S=S||"()")[0]==="(",n=S[1]===")";return(s?this.isAfter(g,l):!this.isBefore(g,l))&&(n?this.isBefore(h,l):!this.isAfter(h,l))||(s?this.isBefore(g,l):!this.isAfter(g,l))&&(n?this.isAfter(h,l):!this.isBefore(h,l))}}})})(J);var z=J.exports;const Q=P(z);M.extend(Q);x(100);const V=X("inspection",()=>{const e=A([]),o=A({}),a=A({}),c=A(!1),d=T(()=>e.value.filter(t=>t.status==="待执行").length),u=T(()=>e.value.filter(t=>t.status==="进行中").length),v=T(()=>e.value.filter(t=>t.status==="已完成").length),l=T(()=>e.value.filter(t=>t.status==="已超时").length),S=T(()=>e.value.filter(t=>M(t.startTime).isSame(M(),"month")).length),g=T(()=>{const t={};return e.value.forEach(r=>{t[r.area]=(t[r.area]||0)+1}),t}),h=(t=!1)=>{c.value=!0;try{const r=localStorage.getItem("inspection_tasks");!r||t?(e.value=x(100),localStorage.setItem("inspection_tasks",JSON.stringify(e.value))):e.value=JSON.parse(r)}catch(r){console.error("加载任务失败:",r),e.value=x(100)}finally{c.value=!1}},s=()=>{h(!0),m.success("数据已刷新")},n=(t,r)=>e.value.filter(f=>M(f.startTime).isBetween(t,r,"day","[]")),i=t=>e.value.filter(r=>r.area===t),B=()=>{try{localStorage.setItem("inspection_tasks",JSON.stringify(e.value))}catch(t){console.error("保存任务失败:",t),m.error("保存任务失败")}},R=t=>{const r={...t,taskNo:`JX${M().format("YYYYMMDD")}${Math.floor(Math.random()*9999).toString().padStart(4,"0")}`};return e.value.unshift(r),B(),m.success("创建任务成功"),r},$=(t,r)=>{const f=e.value.findIndex(p=>p.taskNo===t);f!==-1&&(e.value[f]={...e.value[f],...r},B(),m.success("更新任务成功"))},C=t=>{const r=e.value.findIndex(f=>f.taskNo===t);r!==-1&&(e.value.splice(r,1),B(),m.success("删除任务成功"))},I=t=>{const r=e.value.find(f=>f.taskNo===t);return r?{...r,inspector:r.inspector}:null},E=t=>{try{const r=localStorage.getItem(`inspection_records_${t}`);r&&(o.value[t]=JSON.parse(r))}catch(r){console.error("加载记录失败:",r),m.error("加载记录失败")}},O=t=>{try{localStorage.setItem(`inspection_records_${t}`,JSON.stringify(o.value[t]||[]))}catch(r){console.error("保存记录失败:",r),m.error("保存记录失败")}},Y=(t,r)=>{if(o.value[t]||(o.value[t]=[]),o.value[t].push(r),O(t),I(t)){const p=o.value[t].length*20,y=Math.min(Math.round(p),100);$(t,{progress:y})}},w=t=>{try{const r=localStorage.getItem(`inspection_abnormals_${t}`);r&&(a.value[t]=JSON.parse(r))}catch(r){console.error("加载异常记录失败:",r),m.error("加载异常记录失败")}},b=t=>{try{localStorage.setItem(`inspection_abnormals_${t}`,JSON.stringify(a.value[t]||[]))}catch(r){console.error("保存异常记录失败:",r),m.error("保存异常记录失败")}},j=(t,r)=>{a.value[t]||(a.value[t]=[]),a.value[t].push(r),b(t)},N=(t,r,f)=>{const p=a.value[t];if(p){const y=p.findIndex(F=>F.id===r);y!==-1&&(p[y]={...p[y],...f},b(t))}};return h(),{tasks:e,records:o,abnormals:a,loading:c,pendingTasks:d,processingTasks:u,completedTasks:v,timeoutTasks:l,currentMonthTasks:S,tasksByArea:g,loadTasks:h,refreshTasks:s,addTask:R,updateTask:$,deleteTask:C,getTaskById:I,getTasksByDateRange:n,getTasksByArea:i,loadRecords:E,addRecord:Y,loadAbnormals:w,addAbnormal:j,updateAbnormal:N}});export{V as u};
